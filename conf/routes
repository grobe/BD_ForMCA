# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page

############################## used to demonstrate promise with Java and Play! ###################### 

GET /webservice                         controllers.FuturController.webService

GET /webservice2                        controllers.FuturController.webService2

GET /SayHello/:text					    controllers.ActorController.sayHello(text: String )

#############################used by the bd.grobe.fr applciation ####################################






# Test purpose !!! used to test the use of the Webcam on a web page
GET /scanTest								controllers.BdController.scanTest()



# the two following routes are to authentication purpose
GET /login								controllers.BdController.login(callBackURL : String)

POST /security							controllers.BdController.security()

#to get the cover of the comics strip and call them async from javascript
GET /listCoversJs/:user				controllers.BdController.listCoversJs(user : String)



#to get the cover of the comics strip and call them async from javascript
GET /displayCover/:coverSeeked			controllers.BdController.displayCover(coverSeeked:String)

#used for send to the backend the picturte of the barcode
GET /scan								controllers.BdController.scan()
#
# Async Action : used to catch from a form POST the picture code and display into a for the result of the scan from the web store
POST /infoBD							controllers.BdController.infoBD()


#used for Update or Create a BD after a scan of the bar code
POST /scannedBD							controllers.BdController.scannedBD()

#used to get the list of collection of the owner connected

GET /searchCollection 					controllers.BdController.searchCollection(term: String, userFilter:String) 


#add a BD from the BD coming from the webstore

GET /addBD/:id								controllers.BdController.addBD(id: String )

#Display the main page of the web site
# by default my login is always grobe :)
GET /:login									controllers.BdController.listBD(login : String)
GET /								        controllers.BdController.listBD(login ="grobe") 


# Map static resources from the /public folder to the /assets URL path

GET  /assets/*file  controllers.Assets.versioned(path="/public", file: Asset)
#GET     /assets/*file               controllers.Assets.at(path="/public", file)
